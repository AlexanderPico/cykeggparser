package org.cytoscape.keggparser.actions;

import org.cytoscape.application.swing.AbstractCyAction;
import org.cytoscape.keggparser.KEGGParserPlugin;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;


public class KeggHelpAction extends AbstractCyAction {

    protected static Logger logger = LoggerFactory.getLogger(KeggHelpAction.class);
    //private final ActionListener helpActionListener = CyHelpBroker.getHelpActionListener();

    /**
     * Creates a new HelpContentsAction object.
     */
    public KeggHelpAction() {
        super("User manual");
        setPreferredMenu("Apps.KEGGParser");
    }

    /**
     * Merely calls actionPerformed on the CSH.DisplayHelpFromSource object.
     *
     * @param e The triggering event - passed to CSH.DisplayHelpFromSource.actionPerformed(e)
     */
    public void actionPerformed(ActionEvent e) {
        FileInputStream stream = null;
        if (Desktop.isDesktopSupported()) {
            try {
                File manual = new File(KEGGParserPlugin.getKEGGParserDir(), "CyKEGGParser User Manual.pdf");
                if (!manual.exists()) {
                    ClassLoader cl = this.getClass().getClassLoader();
                    java.io.InputStream in = cl.getResourceAsStream("/CyKEGGParser User Manual.pdf");
                    FileOutputStream out = new FileOutputStream(manual);
                    byte[] bytes = new byte[1024];
                    int read;
                    while ((read = in.read(bytes)) != -1) {
                        out.write(bytes, 0, read);
                    }
                    in.close();
                    out.close();
                }
                Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + manual);
            } catch (IOException ex) {
                logger.error(ex.getMessage());
            }
        }

    }

}

